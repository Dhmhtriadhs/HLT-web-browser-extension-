/**
 * @file Change the web page content to polytonic greek.
 * @author Dimitriadis Dimitris <karaokesuite@gmail.com>
 * @version 0.1
 */
 
var body = document.getElementsByTagName("body")[0];
var active = true;

/**
   * Collects the text nodes.
   *
   * @param {DOMElement} el - The base element.
   * @returns {DOMElements array} The collect text elements.
   */
function textNodesUnder(el){
  var n, a=[], walk=document.createTreeWalker(el,NodeFilter.SHOW_TEXT,null,false);
  while(n=walk.nextNode()) a.push(n);
  return a;
}

// iregular monotonic to polytonic words and words with dasies
var anomala = {
	"ο":"ὁ","του":"τοῦ","τω":"τὼ","τον":"τὸν","ω":"ὢ","τοιν":"τοῖν","οι":"οἱ","των":"τῶν","τοις":"τοῖς","τους":"τοὺς","η":"ἡ","της":"τῆς","τη":"τῇ","την":"τὴν","τα":"τὰ","αι":"αἱ","ταις":"ταῖς","τας":"τὰς","το":"τὸ","τις":"τὶς","για":"γιὰ","θα":"θὰ","μα":"μα","να":"νὰ","ας":"ἂς","γε":"γὲ","είθε":"εἴθε","νυν":"νὺν","οία":"οἷα","οίον":"οἷον","περ":"πὲρ","πω":"πὼ","τοί":"τοὶ","αν":"ἂν","άτε":"ἅτε","διά":"διὰ","κατά":"κατὰ","μετά":"μετὰ","μείον":"μεῖον","με":"μὲ","παρά":"παρά","περί":"περὶ","πλην":"πλὴν","προ":"πρὸ","προς":"πρὸς","σε":"σὲ","συν":"σὺν","χωρίς":"χωρὶς","αντί":"ἀντὶ","αντίς":"ἀντὶς","από":"ἀπὸ","εκ":"ἐκ","εν":"ἐν","εξ":"ἐξ","επί":"ἐπὶ","έως":"ἕως","ίσαμε":"ἴσαμε","υπέρ":"ὑπὲρ","υπό":"ὑπὸ","ως":"ὡς","εις":"εἰς","μέχρι":"μέχρι","νη":"νὴ","αμφί":"ἀμφὶ","ανά":"ἀνὰ","άνευ":"ἄνευ","άχρι":"ἄχρι","ένεκα":"ἕνεκα","ένεκεν":"ἕνεκεν","γιατί":"γιατὶ","δηλαδή":"δηλαδὴ","επειδή":"ἐπειδὴ","είτε":"εἴτε","καί":"καὶ","καθώς":"καθὼς","κι":"κὶ","λοιπόν":"λοιπὸν","μήπως":"μήπως","μήτε":"μήτε","μη":"μὴ","μηδέ":"μηδέ","μην":"μὴν","ουδέ":"οὐδὲ","ούτε":"οὔτε","πριν":"πρὶν","προτού":"προτοῦ","πως":"πως","σαν":"σὰν","τι":"τι","αλλά":"ἀλλὰ","αφού":"ἀφοῦ","ενώ":"ἐνῶ","όποτε":"ὄποτε","ότι":"ὅτι","όμως":"ὅμως","όταν":"ὅταν","γαρ":"γὰρ","δε":"δὲ","δη":"δὴ","δήτα":"δῆτα","ει":"εἰ","και":"καὶ","καίπερ":"καίπερ","καίτοι":"καίτοι","καν":"κἂν","μεν":"μὲν","ου":"οὐ","ουδε":"οὐδε","ουκούν":"οὐκοῦν","ούκουν":"οὔκουν","ούν":"οὖν","τε":"τε","τοίνυν":"τοίνυν","τοιγάρτοι":"τοιγάρτοι","τοιγαρούν":"τοιγαροῦν","ατάρ":"ἀτὰρ","άντε":"ἄντε","άρα":"ἄρα","εάν":"ἐὰν","εάντε":"ἐάντε","επάν":"ἐπὰν","επεί":"ἐπεὶ","επειδάν":"ἐπειδὰν","έστε":"ἔστε","ηνίκα":"ἡνίκα","ην":"ἢν","ήντε":"ἤντε","ήτοι":"ἤτοι","ίνα":"ἵνα","οπηνίκα":"ὁπηνίκα","οποσάκις":"ὁποσάκις","οπόταν":"ὁπόταν","οπότε":"ὁπότε","οσάκις":"ὁσάκις","όπως":"ὅπως","ότε":"ὅτε","ώστε":"ὥστε","Είθε":"Εἴθε","αχαχούχα":"αχαχούχα","εύγε":"εὔγε","μαρς":"μὰρς","μακάρι":"μακάρι","μπα":"μπὰ","μπράβο":"μπράβο","ού":"οὖ","ούφ":"οὖφ","ποπό":"ποπὸ","πούφ":"ποῦφ","σούτ":"σοὺτ","στοπ":"στὸπ","αέρα":"ἀέρα","αλί":"ἀλὶ","αλίμονο":"ἀλίμονο","άιντε":"ἄιντε","αλτ":"ἂλτ","άμε":"ἄμε","άμποτε":"ἄμποτε","άου":"ἄου","αχ":"ἂχ","α":"ἆ","ε":"ἒ","οχ":"ὂχ","όχου":"ὄχου","βαβαί":"βαβαὶ","ευοί":"εὐοῖ","ευάν":"εὐὰν","οίμοι":"οἴμοι","ουαί":"οὐαὶ","παπαί":"παπαῖ","φεύ":"φεῦ","ιού":"ἰοὺ","ιώ":"ἰὼ", "στον":"στὸν", "στην":"στὴν", "στο":"στὸ", "στους":"στοῦς", "στα":"στὰ", "στων":"στῶν", "στες":"στὲς", "είναι":"εἶναι","είμαι":"εἶμαι",
	"έδρα": "ἕδρα", "Έλληνας": "Ἕλληνας", "Έβρος": "Ἕβρος", "αίμα": "αἷμα", "ηδονή": "ἡδονή", "ολόκληρος": "ὁλόκληρος", "όσος": "ὅσος", "ήλιος": "ἥλιος", "όποιος": "ὅποιος", "Ιπποκράτης": "Ἱπποκράτης", "ήμερος": "ἥμερος", "ωραίος": "ὡραῖος", "Ερμης": "Ἑρμῆς", "αψύς": "ἁψύς", "όρκος": "ὅρκος", "αψίθυμος": "ἁψίθυμος", "ως": "ὥς", "ιδρώτας": "ἱδρώτας", "οποίος": "ὁποῖος", "Εβραίος": "Ἑβραῖος", "είλωτας": "εἵλωτας", "ειρμός": "εἱρμός", "Ερμιόνη": "Ἑρμιόνη", "ελκύω": "ἑλκύω", "ορίζω": "ὁρίζω", "έβδομος": "ἕβδομος", "όριο": "ὅριο", "ιστορία": "ἱστορία", "Ηρακλής": "Ἡρακλῆς", "ιμάτιο": "ἱμάτιο", "αλώνι": "ἁλώνι", "ηγούμενος": "ἡγούμενος", "άρμα": "ἅρμα", "ομίχλη": "ὁμίχλη", "ήττα": "ἥττα", "Αλικαρνασσός": "Ἁλικαρνασσός", "εστία": "ἑστία", "εδώλιο": "ἑδώλιο", "ευρετήριο": "εὑρετήριο", "όμως": "ὅμως", "έλος": "ἕλος", "Ιερουσαλήμ": "Ἱερουσαλήμ", "όλος": "ὅλος", "Ήφαιστος": "Ἥφαιστος", "Έλλη": "Ἕλλη", "ίππος": "ἵππος", "ώρα": "ὥρα", "αφή": "ἁφή", "ήπατα": "ἥπατα", "όλμος": "ὅλμος", "όμοιος": "ὅμοιος", "Έκτορας": "Ἕκτορας", "ως": "ὡς", "Ελικώνας": "Ἑλικώνας", "οπλή": "ὁπλή", "εταιρεία": "ἑταιρεία", "ηγεμόνας": "ἡγεμόνας", "όμηρος": "ὅμηρος", "ιδρύω": "ἱδρύω", "Εκάβη": "Ἑκάβη", "όταν": "ὅταν", "αλάτι": "ἁλάτι", "άμα": "ἅμα", "ιερός": "ἱερός", "εαυτός": "ἑαυτός", "εξής": "ἑξῆς", "ότι": "ὅ,τι", "ήρωας": "ἥρωας", "αγνός": "ἁγνός", "αλυσίδα": "ἁλυσίδα", "ημέρα": "ἡμέρα", "όπως": "ὅπως", "Ελένη": "Ἑλένη", "ομάδα": "ὁμάδα", "άρμη": "ἅρμη", "έτοιμος": "ἕτοιμος", "άλμα": "ἅλμα", "αλυκή": "ἁλυκή",
"όρος":"ὅρος","όσιος":"ὅσιος", "όρμώ": "ὅρμῶ", "άμιλλα": "ἅμιλλα", "ερμηνέυω": "ἑρμηνέυω", "αλίπαστο": "ἁλίπαστο", "ομαλός": "ὁμαλός", "έρπω": "ἕρπω", "ηλικία": "ἡλικία", "οδηγός": "ὁδηγός", "αψίδα": "ἁψίδα", "απαλός": "ἁπαλός", "ερπετό": "ἑρπετό", "όραση": "ὅραση", "όρμος": "ὅρμος", "ικανός": "ἱκανός", "αλιεία": "ἁλιεία", "ικετεύω": "ἱκετεύω", "ηνίοχος": "ἡνίοχος", "Όμηρος": "Ὅμηρος", "Αλόννησος": "Ἁλόννησος", "ομού": "ὁμοῦ", "ιστός": "ἱστός", "όμιλος": "ὅμιλος", "Ησίοδος": "Ἡσίοδος", "ήμισυ": "ἥμισυ", "Αίμος": "Αἷμος", "άλωση": "ἅλωση", "ήβη": "ἥβη", "Ελλάδα": "Ἑλλάδα", "απλός": "ἁπλός", "αρπάζω": "ἁρπάζω", "εσπερινός": "ἑσπερινός", "ομιλία": "ὁμιλία", "αμαρτάνω": "ἁμαρτάνω", "Ήρα": "Ἥρα", "αμάξι": "ἁμάξι", "αβρός": "ἁβρός", "αίρεση": "αἵρεση", "έλκος": "ἕλκος", "αρμόζω": "ἁρμόζω", "Άδης": "Ἅδης", "ήσυχος": "ἥσυχος", "αψίκορος": "ἁψίκορος", "εστιατόριο": "ἑστιατόριο", "Ηρόδοτος": "Ἡρόδοτος", "Αλιάκμονας": "Ἁλιάκμονας", "ώριμος": "ὥριμος", "οδός": "ὁδός", "όπλο": "ὅπλο", "έρμαιο": "ἕρμαιο", "όποτε": "ὅποτε", "ιλαρός": "ἱλαρός", "άγιος": "ἅγιος", "αδρός": "ἁδρός", "έλικας": "ἕλικας", "όπου": "ὅπου", "ενώνω": "ἑνώνω", "ότι": "ὅτι", "γαμώ":"ευλογώ","γαμώτο":"εὐλογῶ τὸ","μαλάκα":"εὐλογημένε","πούστη":"εὐλογημένε","πουτάνα":"ευλογημένη"};

var greek_letters = 	"ςερτυθιοπασδφγηξκλζχψωβνμςΕΡΤΥΘΙΟΠΑΣΔΦΓΗΞΚΛΖΧΨΩΒΝΜέύίόάήώΈΎΊΌΆΉΏϋϊΰΐΫΪαᾳάᾴὰᾲᾶᾷἁᾁἅᾅἃᾃἇᾇἀᾀἄᾄἂᾂἆᾆεέὲἑἕἓἐἔἒηῃήῄὴῂῆῇἡᾑἥᾕἣᾓἧᾗἠᾐἤᾔἢᾒἦᾖιίὶῖϊΐῒῗἱἵἳἷἰἴἲἶοόὸὁὅὃὀὄὂρῥῤυύὺῦϋΰῢῧὑὕὓὗὐὔὒὖωῳώῴὼῲῶῷὡᾡὥᾥὣᾣὧᾧὠᾠὤᾤὢᾢὦᾦΑᾼΆᾺἉᾉἍᾍἋᾋἏᾏἈᾈἌᾌἊᾊἎᾎΕΈῈἙἝἛἘἜἚΗῌΉῊἩᾙἭᾝἫᾛἯᾟἨᾘἬᾜἪᾚἮᾞΙΊῚΪἹἽἻἿἸἼἺἾΟΌῸὉὍὋὈὌὊΡῬΥΎῪΫὙὝὛὟΩῼΏῺὩᾩὭᾭὫᾫὯᾯὨᾨὬᾬὪᾪὮᾮ";
var greek_poly = 	"ᾳᾴὰᾲᾶᾷἁᾁἅᾅἃᾃἇᾇἀᾀἄᾄἂᾂἆᾆὲἑἕἓἐἔἒῃῄὴῂῆῇἡᾑἥᾕἣᾓἧᾗἠᾐἤᾔἢᾒἦᾖὶῖϊΐῒῗἱἵἳἷἰἴἲἶὸὁὅὃὀὄὂῥῤὺῦϋΰῢῧὑὕὓὗὐὔὒὖῳῴὼῲῶῷὡᾡὥᾥὣᾣὧᾧὠᾠὤᾤὢᾢὦᾦᾼᾺἉᾉἍᾍἋᾋἏᾏἈᾈἌᾌἊᾊἎᾎῈἙἝἛἘἜἚῌῊἩᾙἭᾝἫᾛἯᾟἨᾘἬᾜἪᾚἮᾞῚΪἹἽἻἿἸἼἺἾῸὉὍὋὈὌὊῬῪΫὙὝὛὟῼῺὩᾩὭᾭὫᾫὯᾯὨᾨὬᾬὪᾪὮᾮ"

var fonien_baria = {
	"ε":"ὲ","υ":"ὺ","ι":"ὶ","ο":"ὸ","α":"ὰ","η":"ὴ","ω":"ὼ",
	"Ε":"Ὲ","Υ":"Ὺ","Ι":"Ὶ","Ο":"Ὸ","Α":"Ὰ","Η":"Ὴ","Ω":"Ὼ","ϋ":"ῢ","ϊ":"ῒ","Ϋ":"Ϋ","Ϊ":"Ϊ",
	"αι":"αὶ","ευ":"εὺ","αυ":"αὺ","ου":"οὺ","οι":"οὶ","ει":"εὶ","υι":"υὶ",
	"έ":"ὲ","ύ":"ὺ","ί":"ὶ","ό":"ὸ","ά":"ὰ","ή":"ὴ","ώ":"ὼ",
	"Έ":"Ὲ","Ύ":"Ὺ","Ί":"Ὶ","Ό":"Ὸ","Ά":"Ὰ","Ή":"Ὴ","Ώ":"Ὼ","ΰ":"ῢ","ΐ":"ῒ",
	"αί":"αὶ","εύ":"εὺ","αύ":"αὺ","ού":"οὺ","οί":"οὶ","εί":"εὶ","υί":"υὶ",
	"Αί":"Αὶ","Εύ":"Εὺ","Αύ":"Αὺ","Ού":"Οὺ","Οί":"Οὶ","Εί":"Εὶ","Υί":"Υὶ",
	"Αι":"Αὶ","Ευ":"Εὺ","Αυ":"Αὺ","Ου":"Οὺ","Οι":"Οὶ","Ει":"Εὶ","Υι":"Υὶ",
	};
var fonien_perispomeni = {
	"ε":"έ","υ":"ῦ","ι":"ῖ","ο":"ό","α":"ᾶ","η":"ῆ","ω":"ῶ",
	"Ε":"Έ","Υ":"Ύ","Ι":"Ί","Ο":"Ό","Α":"Ά","Η":"Ή","Ω":"Ώ","ϋ":"ῧ","ϊ":"ῗ","Ϋ":"Ϋ","Ϊ":"Ϊ",
	"αι":"αῖ","ευ":"εῦ","αυ":"αῦ","ου":"οῦ","οι":"οῖ","ει":"εῖ","υι":"υῖ",
	"έ":"έ","ύ":"ῦ","ί":"ῖ","ό":"ό","ά":"ᾶ","ή":"ῆ","ώ":"ῶ",
	"Έ":"Έ","Ύ":"Ύ","Ί":"Ί","Ό":"Ό","Ά":"Ά","Ή":"Ή","Ώ":"Ώ","ΰ":"ῧ","ΐ":"ῗ",
	"αί":"αῖ","εύ":"εῦ","αύ":"αῦ","ού":"οῦ","οί":"οῖ","εί":"εῖ","υί":"υῖ",
	"Αί":"Αῖ","Εύ":"Εῦ","Αύ":"Αῦ","Ού":"Οῦ","Οί":"Οῖ","Εί":"Εῖ","Υί":"Υῖ",
	"Αι":"Αῖ","Ευ":"Εῦ","Αυ":"Αῦ","Ου":"Οῦ","Οι":"Οῖ","Ει":"Εῖ","Υι":"Υῖ",
	};

var fonien_psili = {
	"ε":"ἐ","υ":"ὐ","ι":"ἰ","ο":"ὀ","α":"ἀ","η":"ἠ","ω":"ὠ",
   "Ε":"Ἐ","Υ":"Ὑ","Ι":"Ἰ","Ο":"Ὀ","Α":"Ἀ","Η":"Ἠ","Ω":"Ὠ",
	"αι":"αἰ","ευ":"εὐ","αυ":"αὐ","ου":"οὐ","οι":"οἰ","ει":"εἰ","υι":"υἱ",
	"έ":"ἔ","ύ":"ὔ","ί":"ἴ","ό":"ὄ","ά":"ἄ","ή":"ἤ","ώ":"ὤ",
   "Έ":"Ἔ","Ύ":"Ὕ","Ί":"Ἴ","Ό":"Ὄ","Ά":"Ἄ","Ή":"Ἤ","Ώ":"Ὤ",
	"αί":"αἴ","εύ":"εὔ","αύ":"αὔ","ού":"οὔ","οί":"οἴ","εί":"εἴ","υί":"υἵ",
	"ὲ":"ἒ","ὺ":"ὒ","ὶ":"ἲ","ὸ":"ὂ","ὰ":"ἂ","ὴ":"ἢ","ὼ":"ὢ",
   "Ὲ":"Ἒ","Ὺ":"Ὕ","Ὶ":"Ἲ","Ὸ":"Ὂ","Ὰ":"Ἂ","Ὴ":"Ἢ","Ὼ":"Ὢ",
	"αὶ":"αἲ","εὺ":"εὒ","αὺ":"αὒ","οὺ":"οὒ","οὶ":"οἲ","εὶ":"εἲ","υὶ":"υἲ",
	"ῦ":"ὖ","ῖ":"ἶ","ᾶ":"ἆ","ῆ":"ἦ","ῶ":"ὦ",
	"αῖ":"αἶ","εῦ":"εὖ","αῦ":"αὖ","οῦ":"οὖ","οῖ":"οἶ","εῖ":"εἶ","υῖ":"υἶ",
	"Αι":"Αἰ","Ευ":"Εὐ","Αυ":"Αὐ","Ου":"Οὐ","Οι":"Οἰ","Ει":"Εἰ","Υι":"Υἱ",
	"Αί":"Αἴ","Εύ":"Εὔ","Αύ":"Αὔ","Ού":"Οὔ","Οί":"Οἴ","Εί":"Εἴ","Υί":"Υἵ",
	"Αὶ":"Αἲ","Εὺ":"Εὒ","Αὺ":"Αὒ","Οὺ":"Οὒ","Οὶ":"Οἲ","Εὶ":"Εἲ","Υὶ":"Υἲ",
	};
var fonien_dasia = {
	"ε":"ἑ","υ":"ὑ","ι":"ἱ","ο":"ὁ","α":"ἁ","η":"ἡ","ω":"ὡ",
	"έ":"ἕ","ύ":"ὕ","ί":"ἵ","ό":"ὅ","ά":"ἅ","ή":"ἥ","ώ":"ὥ",
	"ὲ":"ἓ","ὺ":"ὓ","ὶ":"ἳ","ὸ":"ὃ","ὰ":"ἃ","ὴ":"ἣ","ὼ":"ὣ",
	            "ῦ":"ὗ","ῖ":"ἷ",            "ᾶ":"ἇ","ῆ":"ἧ","ῶ":"ὧ",
	"Ε":"Ἑ","Υ":"Ὑ","Ι":"Ἱ","Ο":"Ὁ","Α":"Ἁ","Η":"Ἡ","Ω":"Ὡ",
	"Έ":"Ἕ","Ύ":"Ὕ","Ί":"Ἵ","Ό":"Ὅ","Ά":"Ἅ","Ή":"Ἥ","Ώ":"Ὥ",
	"Ὲ":"Ἓ","Ὺ":"Ὓ","Ὶ":"Ἳ","Ὸ":"Ὃ","Ὰ":"Ἃ","Ὴ":"Ἣ","Ὼ":"Ὣ",
	"Υι":"Υἱ","Υί":"Υἵ","Υὶ":"Υἳ","Υῖ":"Υἷ",
	"ου":"οὑ",};

var tonos_2_perispomeni = new RegExp("([αεο][ύί]|[ήώ])[ρτθπσδφγξκλζχψβνμ]*(οι|[ευιοαϋϊ])[ρτθπσδφγξκλζχψβνμς]*$");
var tonos_1 = new RegExp("([αεο][ύί]|[έύίήόάώΰΐ])[ρτθπσδφγξκλζχψβνμς]*$");
var tonos_1_perispomeni = new RegExp("(([αεο][ύί]|[ύήάώ])[ρτθπσδφγξκλζχψβνμς]+$|([αεο]ύ|[αε]ί|[ύήάώ]))$");
var tonos_oxia = new RegExp("([αεο][ύί]|[έύίήόάώΰΐ])");
var tonos_0 = new RegExp("([αεο][υι]|[ευιηοαωϋϊ])");
var arxika = new RegExp("^([ΕΟΑεοα][υιύίὺὶῦῖ]|[ΕΥΙΗΟΑΩΈΎΊΉΌΆΏευιηοαωέύίήόάώὲὺὶὴὸὰὼῦῖῆᾶῶ])");
var arxika_dasia = new RegExp("^([Υυ][ιίὶῖ]|[ΥΎῪυύὺ])");

/**
   * Puts tones on the words.
   *
   * @param {String} word - The word.
   * @param {Character} chr - The character after the word.
   * @returns {String} The word with polytonic tones.
   */
function tonise(word, chr) {
	new_word = word;
	if(word.length==0) {
		return new_word;
	}
	l = tonos_oxia.exec(word);
	if(l==undefined || l==null) {
		return new_word;
	}
	l=l[0];
	if(tonos_2_perispomeni.test(word)) {
		new_word = word.replace(l[0],fonien_perispomeni[l]);
	} else if(tonos_1_perispomeni.test(word) && l.length==1) {
			new_word = word.replace(l,fonien_perispomeni[l]);
	} else if(tonos_1.test(word) && chr==" " && l.length==1) {
		new_word = word.replace(l[0],fonien_baria[l]);
	} 
	return new_word
}

/**
   * Puts psili or dasia to words with polytonic tones.
   *
   * @param {String} word - The word.
   * @returns {String} The word with psili or dasia if need it.
   */
function bale_pneumata(word) {
	new_word = word
	l = arxika_dasia.exec(word);
	if (l != null || l!=undefined) {
		l = l[0];
		cut = l.length;
		new_word = fonien_dasia[l]+word.substring(cut);
	} else {
		l = arxika.exec(word);
		if (l != null) {
			l = l[0];
			cut = l.length;		
			new_word = fonien_psili[l]+word.substring(cut);
		}
	}
	return new_word;
}

/**
   * Iterates the text nodes, split words and 
   * apply polytonic when needed.
   */
function poly() {
	txt = textNodesUnder(body)
	var poly = 0;
	for(i=0;i<txt.length;i++){
		value = txt[i].nodeValue
		new_value = ""
		word = "";
		poly = 0;
		for(ci=0;ci<value.length;ci++) {
			chr = value.charAt(ci)
			if(greek_letters.indexOf(chr)>-1) {
				if(greek_poly.indexOf(chr)>-1) {
					poly = 1
				}
				word += chr;
			} else {
				if (poly==1) {
					new_value += word;
				} else {
					anomalo = anomala[word.toLowerCase()];
					if (anomalo!=undefined) {
						if (word.charAt(0).toUpperCase()==word.charAt(0)) {
							upper = anomalo.charAt(0).toUpperCase();
							new_value += upper+anomalo.substring(1); 
						} else {
							new_value += anomalo;
						}
					} else {
						word2 = tonise(word, chr);
						new_word = bale_pneumata(word2);
						new_value += new_word;
					}
				}
				new_value += chr;
				word = "";
				poly = 0;
			}
		}
		if(word.length>0) {
			word2 = tonise(word, " ");
			new_word = bale_pneumata(word2);
			new_value += new_word;
		}

		txt[i].nodeValue = new_value;
	}
}

/**
   * Receive refresh, active, deactivate messages
   * and take the apropriate action.
   */
chrome.runtime.onMessage.addListener(
	function(request, sender, sendResponse) {
		if (request.message == "refresh") {
			poly();
		} 

		if (request.message == "deactivate") {
			active = false;
		} else if (request.message == "activate") {
			active = true;
			poly();
		}
});

/**
   * Activate or deactivate the extension based on
   * the stored value.
   */
chrome.storage.sync.get("active", function(items) {
	if (!chrome.runtime.error) {
		console.log(items);
	}
	value = items.active;
	if(value) {
		poly();
	}
});
